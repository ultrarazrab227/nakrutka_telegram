# -*- coding: utf-8 -*-
import telebot
from telebot import types
import json

bot = telebot.TeleBot("")

main_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_markup.add('‚ñ∂Ô∏è –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ', 'üìà –†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—é', 'üíµ –ë–∞–ª–∞–Ω—Å', 'üí∏ –í—ã–≤–æ–¥ üí∏', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ',
                'üë• –†–µ—Ñ–µ—Ä–∞–ª—ã')

payment = types.ReplyKeyboardMarkup(resize_keyboard=True)
payment.add('Qiwi', '–ÆMoney', '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞', 'üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')

ads = types.ReplyKeyboardMarkup(resize_keyboard=True)
ads.add('üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏')

admin_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
admin_markup.add('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤', '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ', '–†–∞—Å—Å—ã–ª–∫–∞')
with open("users.json", "r") as us_file:
    users = json.load(us_file)

with open("tasks.json", "r") as ff:
    tasks = json.load(ff)

admins = open("admins.txt", 'r')
admins = admins.read().splitlines()

status = None
num = 0
status_pay = 0
method = None
task_link = ""


def check(chat_check_id, check_user_id):
    statuss = ['creator', 'administrator', 'member']
    try:
        user_status = str(bot.get_chat_member(chat_id=chat_check_id, user_id=check_user_id).status)
        if user_status in statuss:
            return 1
        else:
            return 0
    except:
        return 0


@bot.callback_query_handler(func=lambda c: True)
def inlin(c):
    try:
        global tasks
        global task_link
        if c.data == "check":
            chanel_id = tasks[task_link][0]
            if chanel_id in users[str(c.message.chat.id)]["tasks"]:
                bot.send_message(c.message.chat.id, "–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞–≥—Ä–∞–¥—É!")
                task_link = ""
                return
            res_check = check(chanel_id, c.message.chat.id)
            if res_check == 1:
                users[str(c.message.chat.id)]["balance"] += 0.20
                users[str(c.message.chat.id)]["tasks"].append(chanel_id)
                tasks[task_link][1] += 1
                if tasks[task_link][1] >= int(tasks[task_link][2]):
                    tasks.pop(task_link)
                with open("users.json", "w") as json_file:
                    json.dump(users, json_file)
                with open("tasks.json", "w") as tasks_file:
                    json.dump(tasks, tasks_file)
                bot.send_message(c.message.chat.id,
                                 "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –±—ã–ª–∞ –∑–∞—Å—á–∏—Ç–∞–Ω–∞. üíµ –í–∞–º –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ 0.20—Ä—É–±! üíµ")
                task_link = ""
                user_tasks = users[str(c.message.chat.id)]["tasks"]
                for elem in tasks:
                    if not tasks[elem][0] in user_tasks and not tasks[elem][0] in users[str(c.message.chat.id)][
                        "skipped_tasks"]:
                        task_link = elem
                        try:
                            a = str(bot.get_chat_member(chat_id=int(tasks[task_link][0]), user_id=5355339065).status)
                            break
                        except telebot.apihelper.ApiTelegramException:
                            task_link = ""
                            continue
                if task_link == "":
                    bot.send_message(c.message.chat.id,
                                     "–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è! –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ!")
                    return
                # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                task_keyboard = types.InlineKeyboardMarkup(row_width=2)
                link = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É', url=task_link)
                check_button = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check")
                skip_button = types.InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µüîÉ", callback_data="skip")
                task_keyboard.add(link, check_button, skip_button)
                bot.send_message(c.message.chat.id,
                                 "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.",
                                 reply_markup=task_keyboard)
                return
            elif res_check == 0:
                bot.send_message(c.message.chat.id, "‚õîÔ∏è –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª! ‚õîÔ∏è")
        elif c.data == "skip":
            if not tasks[task_link][0] in users[str(str(c.message.chat.id))]["skipped_tasks"] and not \
                    tasks[task_link][0] in users[str(str(c.message.chat.id))]["tasks"]:
                users[str(c.message.chat.id)]["skipped_tasks"].append(tasks[task_link][0])
                bot.send_message(c.message.chat.id, "–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ!")
            else:
                bot.send_message(c.message.chat.id, "–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏/–ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ!")
        task_link = ""
    except Exception as ex:
        task_link = ""
        print(ex)
        try:
            bot.send_message(c.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
        except:
            pass


@bot.message_handler(commands=['start'])
def send_welcome(message):
    try:
        if message.chat.id != message.from_user.id:
            return
        # if admin
        if str(message.chat.id) in admins:
            bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –¢—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∫–∞–∫ –∞–¥–º–∏–Ω!", reply_markup=admin_markup)
            return
        # if the message is first
        if not str(message.chat.id) in users:
            users[str(message.chat.id)] = {
                "balance": 0,
                "withdrawn": 0,
                "tasks": [],
                "or_tasks": 0,
                "skipped_tasks": [],
                "referals": []
            }
            # –µ—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª
            if " " in message.text:
                referrer_candidate = message.text.split()[1]
                if not str(referrer_candidate) in users:
                    return
                try:
                    referrer = int(referrer_candidate)
                    users[str(referrer)]["referals"].append(referrer)
                    users[str(referrer)]["balance"] += 0.02
                except ValueError:
                    pass
        bot.send_message(message.chat.id,
                         "–ü—Ä–∏–≤–µ—Ç! \n\n–ï—Å–ª–∏ —Ç—ã –∑–¥–µ—Å—å –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ - –∂–º–∏ –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ. \n–ï—Å–ª–∏ –¥–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –≤ —Å–≤–æ–π –∫–∞–Ω–∞–ª "
                         "- –†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—é.",
                         reply_markup=main_markup)
        with open("users.json", "w") as json_file:
            json.dump(users, json_file)
    except Exception as ex:
        print(ex)
        try:
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
        except:
            pass


@bot.message_handler(content_types=['text'])
def main(message):
    try:
        if message.chat.id != message.from_user.id:
            return
        if not str(message.chat.id) in users:
            users[str(message.chat.id)] = {
                "balance": 0,
                "withdrawn": 0,
                "tasks": [],
                "or_tasks": 0,
                "skipped_tasks": [],
                "referals": []
            }
        global status
        global num
        global status_pay
        global method
        global tasks
        global task_link
        consts = ["add_admin", "add_task", "mailing", "add_button", "del_button"]
        # –∞–¥–º–∏–Ω–∫–∞
        if str(message.chat.id) in admins:
            if message.text == "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤":
                bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞.")
                status = "add_admin"
                return
            if message.text == "üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
                bot.send_message(message.chat.id, f"C—Ç–∞—Ä—Ç –Ω–∞–∂–∞–ª–∏ {len(users)}\n –ó–∞–¥–∞–Ω–∏–π –≤ –±–æ—Ç–µ {len(tasks)}")
                return
            elif message.text == "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ":
                bot.send_message(message.chat.id,
                                 "–ü—Ä–∏—à–ª–∏—Ç–µ –∫–∞–Ω–∞–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Å—ã–ª–∫–∞ >> –µ–≥–æ id >> –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ >> "
                                 "–Ω–∞–±—Ä–∞—Ç—å (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª) >> id –µ–≥–æ –∞–¥–º–∏–Ω–∞ ")
                status = "add_task"
                return
            elif message.text == "–†–∞—Å—Å—ã–ª–∫–∞":
                bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
                status = "mailing"
                return
            if status in consts:
                if status == "add_admin":
                    admins.append(message.text)
                    with open('admins.txt', 'a') as qwe:
                        qwe.write("\n{}".format(message.text))
                    bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
                    status = None
                elif status == "add_task":
                    try:
                        task_mas = message.text.split()
                        if task_mas[0] in tasks:
                            bot.send_message(message.chat.id, "–≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
                            status = None
                            return
                        else:
                            tasks[task_mas[0]] = [task_mas[1], 0, task_mas[2]]
                            users[task_mas[3]]["or_tasks"] += 1
                            with open("users.json", "w") as json_file:
                                json.dump(users, json_file)
                            with open("tasks.json", "w") as tasks_file:
                                json.dump(tasks, tasks_file)
                            bot.send_message(message.chat.id, "–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
                    except:
                        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!")
                        status = None
                        return
                    status = None
                elif status == "mailing":
                    for elem in users:
                        try:
                            bot.send_message(elem, message.text)
                        except:
                            pass
                    bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                    status = None
            with open("users.json", "w") as json_file:
                json.dump(users, json_file)
            status = None
            return
        if message.text == "‚ñ∂Ô∏è –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ":
            task_link = ""
            user_tasks = users[str(message.chat.id)]["tasks"]
            for elem in tasks:
                if not tasks[elem][0] in user_tasks and not tasks[elem][0] in users[str(message.chat.id)][
                    "skipped_tasks"]:
                    task_link = elem
                    try:
                        a = str(bot.get_chat_member(chat_id=int(tasks[task_link][0]), user_id=5113897551).status)
                        break
                    except telebot.apihelper.ApiTelegramException:
                        task_link = ""
                        continue
            if task_link == "":
                bot.send_message(message.chat.id,
                                 "–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è! –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ!")
                return
            # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            task_keyboard = types.InlineKeyboardMarkup(row_width=2)
            link = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É', url=task_link)
            check_button = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check")
            skip_button = types.InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µüîÉ", callback_data="skip")
            task_keyboard.add(link, check_button, skip_button)
            bot.send_message(message.chat.id,
                             "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.",
                             reply_markup=task_keyboard)
        elif message.text == "üìà –†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—é":
            bot.send_message(message.chat.id, "‚Äº–ß—Ç–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–∞–Ω–∞–ª –≤ —Ä–∞—Å–∫—Ä—É—Ç–∫—É –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É: @earleyn_on"
                                              "(–ù–µ —Ä–∞—Å–∫—Ä—É—á–∏–≤–∞–µ–º 18+üîû)", reply_markup=ads)
        elif message.text == "üë• –†–µ—Ñ–µ—Ä–∞–ª—ã":
            bot.send_message(message.chat.id,
                             "üë§ –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n\nhttps://t.me/Actioncore_bot?start={}\n\nüë• –ö–æ–ª-–≤–æ "
                             "—Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {}\nüí∏ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ : {}‚ÇΩ".format(message.chat.id, len(users[str(
                                 message.chat.id)]["referals"]), len(users[str(
                                 message.chat.id)]["referals"]) * 0.02))
        elif message.text == "üíµ –ë–∞–ª–∞–Ω—Å":
            bot.send_message(message.chat.id, "üè¶ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {} \n"
                                              "üë• –ü–æ–ª—É—á–µ–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {}\n"
                                              "üí∞ –í—ã–ø–ª–∞—á–µ–Ω–Ω–æ –≤ —Å—É–º–º–µ: {}\n"
                                              "üí∏ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: 10‚ÇΩ\n"
                                              "üìÉ –ö–æ–º–∏—Å—Å–∏—è QIWI –∑–∞ –ø–µ—Ä–µ–≤–æ–¥:\n"
                                              "ü•ù QIWI : 2%\n"
                                              "üîÑ –ÆMoney : 0%\n"
                                              "üí≥ –ë–∞–Ω–∫. –∫–∞—Ä—Ç—ã: 2% + 50‚ÇΩ.\n".
                             format(users[str(message.chat.id)]["balance"],
                                    len(users[str(message.chat.id)]["referals"]) * 0.02,
                                    users[str(message.chat.id)]["withdrawn"]))
        elif message.text == "üí∏ –í—ã–≤–æ–¥ üí∏":
            if users[str(message.chat.id)]["balance"] < 10:
                bot.send_message(message.chat.id, "–í–∞—à –±–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã. –ú–∏–Ω–∏–º—É–º - 10‚ÇΩ")
                return
            else:
                bot.send_message(message.chat.id,
                                 "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", reply_markup=payment)
                status_pay = 1
                return
        if status_pay == 1:
            if message.text == "Qiwi":
                method = "Qiwi"
                bot.send_message(message.chat.id,
                                 "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞! –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä, –Ω–∞–ø–∏—à–∏—Ç–µ @earleyn_on",
                                 reply_markup=types.ReplyKeyboardRemove())
                status_pay = 2
                return
            elif message.text == "–ÆMoney":
                method = "–ÆMoney"
                bot.send_message(message.chat.id,
                                 "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Å—á—ë—Ç–∞! –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä, –Ω–∞–ø–∏—à–∏—Ç–µ @earleyn_on",
                                 reply_markup=types.ReplyKeyboardRemove())
                status_pay = 2
                return
            elif message.text == "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞":
                method = "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞"
                bot.send_message(message.chat.id,
                                 "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã! –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä, –Ω–∞–ø–∏—à–∏—Ç–µ @earleyn_on",
                                 reply_markup=types.ReplyKeyboardRemove())
                status_pay = 2
                return
            else:
                method = None
                status_pay = 0
                num = 0
                bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞", reply_markup=main_markup)
                return
        elif status_pay == 2:
            num = message.text
            status_pay = 3
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞")
            return
        elif status_pay == 3:
            try:
                summ = float(message.text)
                if users[str(message.chat.id)]["balance"] >= summ:
                    users[str(message.chat.id)]["balance"] -= summ
                    bot.send_message(1755776176,
                                     "–ü—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –Ω–∞ {} –Ω–∞ —Å—É–º–º—É {} –Ω–∞ –Ω–æ–º–µ—Ä —Å—á—ë—Ç–∞ {} –æ—Ç {}. –ï–≥–æ id {}".format(
                                         method, summ, num, message.from_user.first_name, message.from_user.id))
                    if message.from_user.username is not None:
                        bot.send_message(1755776176, "–ï–≥–æ username @" + message.from_user.username)
                    bot.send_message(message.chat.id, "–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                                     reply_markup=main_markup)
                    method = None
                    status_pay = 0
                    num = 0
                    return
                else:
                    method = None
                    status_pay = 0
                    num = 0
                    bot.send_message(message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç—É")
                    return
            except ValueError:
                method = None
                status_pay = 0
                num = 0
                bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞")
                return


        elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ":
            bot.send_message(message.chat.id,
                             " –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –≤—ã–ø–æ–ª–Ω—è—è –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º. \n"
                             "–ê —Ç–∞–∫ –∂–µ, –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞—Å–∫—Ä—É—Ç–∫—É –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞.\n"
                             "–ù–æ–≤–æ—Å—Ç–∏ –∞ –±–æ—Ç–µ –∏ –∞ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ: @action_core_news\n",
                             reply_markup=main_markup)
        elif message.text == "üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏":
            if users[str(message.chat.id)]["or_tasks"] > 0:
                bot.send_message(message.chat.id,
                                 "–£ –≤–∞—Å –µ—Å—Ç—å {} –∑–∞–¥–∞—á.".format(users[str(message.chat.id)]["or_tasks"]),
                                 reply_markup=main_markup)
            else:
                bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.", reply_markup=main_markup)
        with open("users.json", "w") as json_file:
            json.dump(users, json_file)
    except Exception as ex:
        print(ex)
        try:
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
        except:
            pass


bot.polling()
